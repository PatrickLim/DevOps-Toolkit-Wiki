-- Add Rights to existing Role for M/R Staff
insert into WEB_ROLE_RIGHT
select 227, APP_AREA_CD, SEC_RIGHT_ID 
from WEB_RIGHT_MSTR where APP_AREA_CD = 'MEDICAL_RECORDS'
and SEC_RIGHT_ID not like 'dash%'
and SEC_RIGHT_ID not like 'rug%'
and SEC_RIGHT_ID not like 'adj%'
and SEC_RIGHT_ID not like 'NOTES-ENTRY-QA'
and SEC_RIGHT_ID not like 'REFUND-REVIEW-QA'
and SEC_RIGHT_ID not like 'ALLERGIES-TAB'
and SEC_RIGHT_ID not like 'FILE-IMPORT-QA'
GO
-- Remove current users
delete from ROLE_USERS where role_id = 227
GO

-- Add MR Users
insert into ROLE_USERS
select 227, USERNAME from USER_MSTR
where USERNAME in ('DC442918','RK776268','RL108902','JY108918','GP320905')
GO

-- Global Registry
update GLOBAL_REGISTRY set VALUE2 = 'https://3mcsr.crmc.health' where REGISTRY_KEY = '3M_CRS_URL'
GO

-- Location Registry
update LOCATION_REGISTRY set VALUE1 = 'TRUCODE' where REGISTRY_KEY = 'EXTERNAL_CODER'
GO

-- Build Queues
CREATE PROCEDURE [dbo].[WEB_QUEUE_IP_CODING_HIGH_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.CLASSIFICATION_CD = 'I' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and V.DISCH_DATE is not Null
	and V.CHARGES_TOTAL > 100000

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_IP_CODING_HIGH_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

UPDATE WEB_QUEUE_MSTR SET ABBR_TXT = 'IP Coding H', FULL_TXT = 'IP Coding (High Dollar)', STORED_PROC_NAME = 'WEB_QUEUE_IP_CODING_HIGH_CUSTOM', SCORECARD_EVENT_CD = 'CODE_IP'
where ABBR_TXT = 'IP Coding'
GO

-- Build Queues
CREATE PROCEDURE [dbo].[WEB_QUEUE_IP_CODING_LOW_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.CLASSIFICATION_CD = 'I' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and V.DISCH_DATE is not Null
	and V.CHARGES_TOTAL <= 100000

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_IP_CODING_LOW_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO


INSERT INTO [dbo].[WEB_QUEUE_MSTR]
           ([ABBR_TXT]
           ,[FULL_TXT]
           ,[APP_AREA_CD]
           ,[ACCOUNT_LEVEL_MVF]
           ,[COLLECTOR_ID]
           ,[CLAUSE_TEXT]
           ,[ENABLE_FLG]
           ,[REPORT_FLG]
           ,[REAL_TIME_FLG]
           ,[MULTI_FLG]
           ,[SCORECARD_EVENT_CD]
           ,[STORED_PROC_NAME]
           ,[QUEUE_MVF])
SELECT 'IP Coding L'
      ,'IP Coding (Low Dollar)'
      ,[APP_AREA_CD]
      ,[ACCOUNT_LEVEL_MVF]
      ,[COLLECTOR_ID]
      ,[CLAUSE_TEXT]
      ,[ENABLE_FLG]
      ,[REPORT_FLG]
      ,[REAL_TIME_FLG]
      ,[MULTI_FLG]
      ,'CODE_IP'
      ,'WEB_QUEUE_IP_CODING_LOW_CUSTOM'
      ,[QUEUE_MVF]
  FROM [dbo].[WEB_QUEUE_MSTR]
	WHERE ABBR_TXT = 'IP CODING H'
GO

CREATE PROCEDURE [dbo].[WEB_QUEUE_ER_CODING_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.CLASSIFICATION_CD = 'E' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and V.DISCH_DATE is not Null

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_ER_CODING_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

UPDATE WEB_QUEUE_MSTR SET STORED_PROC_NAME = 'WEB_QUEUE_ER_CODING_CUSTOM', SCORECARD_EVENT_CD = 'CODE_OP'
where ABBR_TXT = 'ER Coding'
GO

CREATE PROCEDURE [dbo].[WEB_QUEUE_OBS_CODING_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.PAT_TYPE_CD = '3' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and V.DISCH_DATE is not Null

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_OBS_CODING_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

INSERT INTO [dbo].[WEB_QUEUE_MSTR]
           ([ABBR_TXT]
           ,[FULL_TXT]
           ,[APP_AREA_CD]
           ,[ACCOUNT_LEVEL_MVF]
           ,[COLLECTOR_ID]
           ,[CLAUSE_TEXT]
           ,[ENABLE_FLG]
           ,[REPORT_FLG]
           ,[REAL_TIME_FLG]
           ,[MULTI_FLG]
           ,[SCORECARD_EVENT_CD]
           ,[STORED_PROC_NAME]
           ,[QUEUE_MVF])
SELECT 'OBS Coding'
      ,'OBS Coding'
      ,[APP_AREA_CD]
      ,[ACCOUNT_LEVEL_MVF]
      ,[COLLECTOR_ID]
      ,[CLAUSE_TEXT]
      ,[ENABLE_FLG]
      ,[REPORT_FLG]
      ,[REAL_TIME_FLG]
      ,[MULTI_FLG]
      ,'CODE_OP'
      ,'WEB_QUEUE_OBS_CODING_CUSTOM'
      ,[QUEUE_MVF]
  FROM [dbo].[WEB_QUEUE_MSTR]
	WHERE ABBR_TXT = 'IP CODING H'
GO

CREATE PROCEDURE [dbo].[WEB_QUEUE_OP_CODING_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.CLASSIFICATION_CD = 'O' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and v.PAT_TYPE_CD <> '3' and v.PAT_TYPE_CD <> 'Q'
	and V.DISCH_DATE is not Null

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_OP_CODING_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

UPDATE WEB_QUEUE_MSTR SET STORED_PROC_NAME = 'WEB_QUEUE_OP_CODING_CUSTOM', SCORECARD_EVENT_CD = 'CODE_OP'
where ABBR_TXT = 'OP Coding'
GO

CREATE PROCEDURE [dbo].[WEB_QUEUE_SDS_CODING_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.PAT_TYPE_CD = 'Q' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 
	and V.DISCH_DATE is not Null

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_SDS_CODING_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

INSERT INTO [dbo].[WEB_QUEUE_MSTR]
           ([ABBR_TXT]
           ,[FULL_TXT]
           ,[APP_AREA_CD]
           ,[ACCOUNT_LEVEL_MVF]
           ,[COLLECTOR_ID]
           ,[CLAUSE_TEXT]
           ,[ENABLE_FLG]
           ,[REPORT_FLG]
           ,[REAL_TIME_FLG]
           ,[MULTI_FLG]
           ,[SCORECARD_EVENT_CD]
           ,[STORED_PROC_NAME]
           ,[QUEUE_MVF])
SELECT 'SDS Coding'
      ,'SDS Coding'
      ,[APP_AREA_CD]
      ,[ACCOUNT_LEVEL_MVF]
      ,[COLLECTOR_ID]
      ,[CLAUSE_TEXT]
      ,[ENABLE_FLG]
      ,[REPORT_FLG]
      ,[REAL_TIME_FLG]
      ,[MULTI_FLG]
      ,'CODE_OP'
      ,'WEB_QUEUE_SDS_CODING_CUSTOM'
      ,[QUEUE_MVF]
  FROM [dbo].[WEB_QUEUE_MSTR]
	WHERE ABBR_TXT = 'IP CODING H'
GO

CREATE PROCEDURE [dbo].[WEB_QUEUE_SERIES_CODING_CUSTOM] (@QueueId INT,@LocCd LOCATION_CD,
															@InsId INS_ID,
															@PayerCd PAYER_CD,
															@VisitNo VISIT_NO 
															,@LogRowNo INT)

AS

BEGIN

	DECLARE @USERNAME VARCHAR(100)
	SET @USERNAME = SubString(SYSTEM_USER, len(SYSTEM_USER)-(len(SYSTEM_USER) - PATINDEX ( '%\_%' , SYSTEM_USER))+1, len(SYSTEM_USER))

	CREATE table #QUEUE_PROCESSING (VISIT_NO VARCHAR(20), EPISODE_NO INT, URN INT)

	INSERT INTO #QUEUE_PROCESSING (VISIT_NO, EPISODE_NO, URN)
	SELECT V.VISIT_NO, null, V.URN
	FROM VISIT V WITH (NOLOCK)	
	INNER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) on PTM.PAT_TYPE_CD = V.PAT_TYPE_CD 
	WHERE V.final_bill_date is null and PTM.CLASSIFICATION_CD = 'S' and (V.abstract_complete_MVF <= 0 or V.ABSTRACT_COMPLETE_MVF is null) 

	EXEC WEB_QUEUE_PROCESSING  @QueueId, @LogRowNo

	IF (@LocCd IS NOT NULL)
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
			AND (V.LOCATION_CD =@LocCd OR @LocCd IS NULL)
		ORDER BY V.Disch_date ASC   
	END
	ELSE
	BEGIN
		Select 
			V.Visit_no as [VISIT_NO]  
			, P.LAST_NAME+', '+P.FIRST_NAME+ISNULL(' '+P.MIDDLE_INITIAL+'.','') [PATIENT NAME]  
			, CONVERT(VARCHAR,V.ADMIT_DATE,101) [ADMIT_DATE]  
			, CONVERT(VARCHAR,V.DISCH_DATE,101) [DISCH_DATE]  
			, Case V.ABSTRACT_COMPLETE_MVF when 0 then 'Incomplete' when -1 then 'Waiting for Review' else 'Incomplete' end as [ABSTRACT STATUS]  
			, PTM.ABBR_TXT as [PATIENT TYPE]  
			, HSM.ABBR_TXT AS [SERVICE]  
			, V.CHARGES_TOTAL [CHARGES$]  
			, IPM.NAME as [INSURANCE]  
			, PM.LAST_NAME+', '+PM.FIRST_NAME+ISNULL(' '+ PM.MIDDLE_INITIAL+'.','') [ATTENDING PHYSICIAN]  
			, NFF.NARRATIVE AS [RECENT USER NOTE]
			, WQW.ROW_NO [LOG_ROW_NO@]
			, VD.PUBLISH_FLG AS [PUBLISH_FLG@]
		FROM WEB_QUEUE_WORK WQW WITH (NOLOCK)
		INNER JOIN VISIT V WITH (NOLOCK) ON WQW.VISIT_NO = V.VISIT_NO
		INNER JOIN PATIENT P WITH (NOLOCK) ON P.URN=V.URN  
		LEFT OUTER JOIN INSURANCE I WITH (NOLOCK) ON I.VISIT_NO = V.VISIT_NO AND I.RANK = 1  
		LEFT OUTER JOIN INS_PLAN_MSTR IPM WITH (NOLOCK) on IPM.INS_ID = I.INS_ID and IPM.PLAN_ID = I.PLAN_ID  
		LEFT OUTER JOIN PHYSICIAN PH WITH (NOLOCK) on PH.VISIT_NO = V.VISIT_NO and PH.PHYSICIAN_TYPE_CD = 2  
		LEFT OUTER JOIN PHYS_MSTR PM WITH (NOLOCK) on PM.PHYS_ID = PH.PHYS_ID  
		LEFT OUTER JOIN VISIT_DETAIL VD WITH (NOLOCK) ON V.VISIT_NO = VD.VISIT_NO  
		LEFT OUTER JOIN PAT_TYPE_MSTR PTM WITH (NOLOCK) ON V.PAT_TYPE_CD = PTM.PAT_TYPE_CD  
		LEFT OUTER JOIN HOSP_SERVICE_MSTR HSM WITH (NOLOCK) ON V.HOSP_SERVICE_CD = HSM.HOSP_SERVICE_CD  
		LEFT OUTER JOIN NOTES_FF NFF WITH (NOLOCK) ON V.VISIT_NO = NFF.VISIT_NO AND NFF.SYSTEM_GENERATED_FLG = 0
		WHERE WQW.COMPLETED_DATE is null
			AND WQW.QUEUE_ID=@QueueId
			AND NOT exists(select * from NOTES_FF NFF2 WITH (NOLOCK) where NFF.VISIT_NO = NFF2.VISIT_NO AND NFF2.SYSTEM_GENERATED_FLG = 0 AND NFF2.CREATE_DATE > NFF.CREATE_DATE) 
		ORDER BY V.Disch_date ASC   
	END

	DROP TABLE #QUEUE_PROCESSING

END
GO

GRANT EXECUTE ON [dbo].[WEB_QUEUE_SERIES_CODING_CUSTOM]
TO [INSIGHTCS], [SQLUSERS], [QUERYUSERS]
GO

INSERT INTO [dbo].[WEB_QUEUE_MSTR]
           ([ABBR_TXT]
           ,[FULL_TXT]
           ,[APP_AREA_CD]
           ,[ACCOUNT_LEVEL_MVF]
           ,[COLLECTOR_ID]
           ,[CLAUSE_TEXT]
           ,[ENABLE_FLG]
           ,[REPORT_FLG]
           ,[REAL_TIME_FLG]
           ,[MULTI_FLG]
           ,[SCORECARD_EVENT_CD]
           ,[STORED_PROC_NAME]
           ,[QUEUE_MVF])
SELECT 'SeriesCoding'
      ,'Series Coding'
      ,[APP_AREA_CD]
      ,[ACCOUNT_LEVEL_MVF]
      ,[COLLECTOR_ID]
      ,[CLAUSE_TEXT]
      ,[ENABLE_FLG]
      ,[REPORT_FLG]
      ,[REAL_TIME_FLG]
      ,[MULTI_FLG]
      ,'CODE_OP'
      ,'WEB_QUEUE_SERIES_CODING_CUSTOM'
      ,[QUEUE_MVF]
  FROM [dbo].[WEB_QUEUE_MSTR]
	WHERE ABBR_TXT = 'IP CODING H'
GO

INSERT INTO [dbo].[WEB_QUEUE_USER_MAP]
           ([USERNAME]
           ,[QUEUE_ID]
           ,[DEFAULT_FLG]
           ,[CREATE_DATE]
           ,[CREATE_BY])
select username, QUEUE_ID, 0, getdate(), 'DC442918'
from ROLE_USERS r
cross join WEB_QUEUE_MSTR m
where role_id = 227
and APP_AREA_CD = 'MEDICAL_RECORDS'
and not exists(select * from WEB_QUEUE_USER_MAP w where w.USERNAME = r.USERNAME and w.QUEUE_ID = m.QUEUE_ID)
GO

-- Remove Insight Access to no longer used applications
DELETE FROM ROLE_SEC_RIGHT
WHERE SEC_RIGHT_ID IN ('BORMAINT','CHRTLOCMNT','CMGM_ADD', 'CMGM_DEL', 'CMGM_INQ', 'CMGM_UPD','DEFAGE_ADD','DEFAGE_DEL','DEFAGE_INQ', 'DEFAGE_UPD', 
'CHARTMAINT',
'COMPAB_MOD',
'DEFENT_DEL',
'DEFENT_INQ',
'DEFLOCMNT',
'DEFPHYSADD',
'DEFPHYSDEL',
'DEFPHYSINQ',
'DEFUPDATE',
'MPINQ_INQ',
'MRABST_ACC',
'MRABST_CMP',
'MRABST_EXT',
'MRABST_FOO',
'MRABST_MOD',
'MRABST_OVR',
'MRABST_UPD',
'MRCHG_INQ',
'MRCHG_MOD',
'MRDOB_MOD',
'MRMRG_DEL',
'MRMRG_INQ',
'MRMRG_UPD',
'MRNAME_MOD',
'MRPHYS_INQ',
'MRPHYSGRP',
'MRSSN_MOD',
'PHYS2_INQ',
'PHYSGRPADD',
'PHYSGRPINQ',
'PHYSGRPMOD',
'QUADRAMED')
go

-- Remove applications from user profile
DELETE from USER_APPLICATIONS
	from USER_APPLICATIONS ua
where not exists(select * from ROLE_USERS ur 
	inner join ROLE_SEC_RIGHT rsr on ur.ROLE_ID = rsr.ROLE_ID 
	inner join SEC_RIGHT_MSTR srm on rsr.SEC_RIGHT_ID = srm.SEC_RIGHT_ID
	where ua.USERNAME = ur.USERNAME AND SRM.DLL_NAME = UA.DLL_NAME)
go


